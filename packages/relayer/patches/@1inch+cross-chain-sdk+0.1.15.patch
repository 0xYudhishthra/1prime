# generated by patch-package 6.4.14
#
# declared package:
#   @1inch/cross-chain-sdk: ^0.1.15
#
diff --git a/node_modules/@1inch/cross-chain-sdk/dist/cjs/chains.js b/node_modules/@1inch/cross-chain-sdk/dist/cjs/chains.js
index 4b4e3a6..03694d6 100644
--- a/node_modules/@1inch/cross-chain-sdk/dist/cjs/chains.js
+++ b/node_modules/@1inch/cross-chain-sdk/dist/cjs/chains.js
@@ -3,6 +3,8 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.isSupportedChain = exports.SupportedChains = void 0;
 const fusion_sdk_1 = require("@1inch/fusion-sdk");
 exports.SupportedChains = [
+    fusion_sdk_1.NetworkEnum.NEAR,
+    fusion_sdk_1.NetworkEnum.NEAR_TESTNET,
     fusion_sdk_1.NetworkEnum.ETHEREUM,
     fusion_sdk_1.NetworkEnum.POLYGON,
     fusion_sdk_1.NetworkEnum.BINANCE,
diff --git a/node_modules/@1inch/cross-chain-sdk/dist/esm/chains.js b/node_modules/@1inch/cross-chain-sdk/dist/esm/chains.js
index 8f80835..f52db06 100644
--- a/node_modules/@1inch/cross-chain-sdk/dist/esm/chains.js
+++ b/node_modules/@1inch/cross-chain-sdk/dist/esm/chains.js
@@ -1,5 +1,7 @@
 import { NetworkEnum } from '@1inch/fusion-sdk';
 export const SupportedChains = [
+    NetworkEnum.NEAR,
+    NetworkEnum.NEAR_TESTNET,
     NetworkEnum.ETHEREUM,
     NetworkEnum.POLYGON,
     NetworkEnum.BINANCE,
diff --git a/node_modules/@1inch/cross-chain-sdk/dist/types/src/chains.d.ts b/node_modules/@1inch/cross-chain-sdk/dist/types/src/chains.d.ts
index 8fcab96..eb34dac 100644
--- a/node_modules/@1inch/cross-chain-sdk/dist/types/src/chains.d.ts
+++ b/node_modules/@1inch/cross-chain-sdk/dist/types/src/chains.d.ts
@@ -1,6 +1,6 @@
 import { NetworkEnum } from '@1inch/fusion-sdk';
 import { TupleToUnion } from './type-utils';
-export declare const SupportedChains: readonly [NetworkEnum.ETHEREUM, NetworkEnum.POLYGON, NetworkEnum.BINANCE, NetworkEnum.OPTIMISM, NetworkEnum.ARBITRUM, NetworkEnum.AVALANCHE, NetworkEnum.GNOSIS, NetworkEnum.COINBASE, NetworkEnum.ZKSYNC, NetworkEnum.LINEA, NetworkEnum.SONIC, NetworkEnum.UNICHAIN];
+export declare const SupportedChains: readonly [NetworkEnum.NEAR, NetworkEnum.NEAR_TESTNET, NetworkEnum.ETHEREUM, NetworkEnum.POLYGON, NetworkEnum.BINANCE, NetworkEnum.OPTIMISM, NetworkEnum.ARBITRUM, NetworkEnum.AVALANCHE, NetworkEnum.GNOSIS, NetworkEnum.COINBASE, NetworkEnum.ZKSYNC, NetworkEnum.LINEA, NetworkEnum.SONIC, NetworkEnum.UNICHAIN];
 type UnsupportedChain = Exclude<NetworkEnum, TupleToUnion<typeof SupportedChains>>;
 export type SupportedChain = Exclude<NetworkEnum, UnsupportedChain>;
 export declare const isSupportedChain: (chain: unknown) => chain is SupportedChain;

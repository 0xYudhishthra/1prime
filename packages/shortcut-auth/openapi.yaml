openapi: 3.1.3
info:
  title: Cross-Chain Swap API
  description: |
    A proof-of-concept API for cross-chain swaps between EVM chains and NEAR protocol.
    Designed for Apple Shortcuts integration with Siri voice control.

    ## Authentication Flow
    1. Sign up with email/password to get auth token
    2. Store token in Downloads/ folder for Shortcuts access
    3. EVM and NEAR wallets are automatically generated and linked

    ## Multi-Chain Support
    - EVM chains: Ethereum Sepolia, Arbitrum Sepolia, Optimism Sepolia
    - Smart wallets deployed on all supported chains with same address
    - Comprehensive token discovery: Native tokens (ETH, NEAR) + all supported tokens (ERC-20s, NEP-141s)
    - Chain-abstracted balance views for unified multi-token wallet management

    ## Cross-Chain Swaps
    - **1inch Fusion+ Integration**: Atomic swaps using 1inch Fusion+ protocol
    - **Bi-directional Support**: EVM â†” NEAR protocol swaps
    - **User-Friendly Interface**: Chain names ("ethereum", "near") and human-readable amounts ("10" USDC)
    - **Automatic Token Assignment**: USDC contracts auto-assigned based on chains
    - **Real-time Status Tracking**: Live polling of order status with detailed phase information
    - **NEAR Integration**: Automatic USDC approval for NEAR-originated swaps
    - **Voice Control Ready**: Optimized for Apple Shortcuts and Siri integration

    ## Security Note
    This is a proof-of-concept with simplified security for validation purposes.
  version: 1.0.0
  contact:
    name: Cross-Chain Swap Team
  license:
    name: MIT

servers:
  - url: https://shortcut-auth.tanweihup.workers.dev
    description: Production server
  - url: http://localhost:8787
    description: Development server

security:
  - BearerAuth: []

paths:
  /sign-up/email:
    post:
      tags:
        - Authentication
      summary: Create new user account with email/password
      description: |
        Creates a new user account and automatically generates both EVM and NEAR wallets.
        EVM smart wallets are deployed on all supported chains with the same address.
        Returns authentication token that should be stored in Downloads/ folder.
      security: [] # No auth required for signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: 'user@example.com'
                password:
                  type: string
                  minLength: 6
                  maxLength: 10
                  example: 'password123'
      responses:
        '200':
          description: Account created successfully
          content:
            application/json:
              schema:
                type: string
                description: Bearer token for authentication
                example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
        '500':
          description: Failed to create account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                evm_error:
                  value:
                    error: 'Failed to create multi-chain evm account'
                near_error:
                  value:
                    error: 'Failed to create near account'
                rpc_missing:
                  value:
                    error: 'Missing required ZeroDev RPC URLs for chains: 11155111, 421614'

  /sign-in/email:
    post:
      tags:
        - Authentication
      summary: Sign in with email/password
      description: |
        Authenticates existing user with email and password.
        Returns authentication token for accessing protected endpoints.
      security: [] # No auth required for signin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: 'user@example.com'
                password:
                  type: string
                  example: 'password123'
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: string
                description: Bearer token for authentication
                example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Authentication failed'

  /api/send-transaction:
    post:
      tags:
        - EVM Transactions
      summary: Send EVM transaction
      description: Sends a test EVM transaction using the user's smart wallet on Arbitrum Sepolia
      responses:
        '200':
          description: Transaction sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  txnHash:
                    type: string
                    description: Transaction hash
                    example: '0x1234567890abcdef...'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Wallet not found'
        '500':
          description: Failed to send transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Failed to send transaction'

  /api/send-near-transaction:
    post:
      tags:
        - NEAR Transactions
      summary: Send NEAR transaction
      description: Sends a test NEAR transaction (0.1 NEAR to self)
      responses:
        '200':
          description: Transaction sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    description: NEAR transaction result
                    properties:
                      final_execution_status:
                        type: string
                      transaction:
                        type: object
                      receipts_outcome:
                        type: array
                        items:
                          type: object
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Wallet not found'
        '500':
          description: Server error or no NEAR account found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                no_account:
                  value:
                    error: 'No near account found'
                transaction_failed:
                  value:
                    error: 'Failed to send NEAR transaction'

  /api/random-number:
    get:
      tags:
        - Test Endpoints
      summary: Get random number (test endpoint)
      description: Returns a random number to test authentication
      responses:
        '200':
          description: Random number generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  number:
                    type: integer
                    minimum: 0
                    maximum: 99
                    example: 42
        '401':
          $ref: '#/components/responses/Unauthorized'

  /create-near-account:
    get:
      tags:
        - Test Endpoints
      summary: Create test NEAR account
      description: Test endpoint to create a NEAR account (development only)
      security: []
      responses:
        '200':
          description: NEAR account created
          content:
            application/json:
              schema:
                type: object
                properties:
                  nearAccount:
                    type: object
                    properties:
                      accountId:
                        type: string
                        example: '4ervtktfnuw7kwxaervheolyggrdncxo.testnet'
                      keyPair:
                        type: object
                      transaction:
                        type: object
        '500':
          $ref: '#/components/responses/ServerError'

  /api/wallet/supported-chains:
    get:
      tags:
        - Wallet
      summary: Get supported EVM testnet chains
      description: Returns list of supported EVM testnet chains for cross-chain operations
      security: [] # No auth required
      responses:
        '200':
          description: Supported chains retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  chains:
                    type: array
                    items:
                      type: object
                      properties:
                        chainId:
                          type: integer
                          example: 421614
                        name:
                          type: string
                          example: 'Arbitrum Sepolia'
              example:
                chains:
                  - chainId: 11155111
                    name: 'Ethereum Sepolia'
                  - chainId: 421614
                    name: 'Arbitrum Sepolia'
                  - chainId: 11155420
                    name: 'Optimism Sepolia'

  /api/wallet/addresses:
    get:
      tags:
        - Wallet
      summary: Get wallet addresses for all supported chains
      description: |
        Returns both EVM (smart wallet and EOA) and NEAR wallet addresses.
        The smart wallet address is the same across all supported EVM testnet chains.
      responses:
        '200':
          description: Wallet addresses retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  evm:
                    type: object
                    properties:
                      smartWallet:
                        type: object
                        properties:
                          address:
                            type: string
                            example: '0x321fBF99d74b02f405CbD7D5b59F6D01A047814e'
                          note:
                            type: string
                            example: 'Send funds here for smart wallet operations. Same address works on all supported EVM chains.'
                      eoa:
                        type: object
                        properties:
                          address:
                            type: string
                            example: '0xE86eef3Dfc60939155Cb2139fb32f41e6996ba72'
                          note:
                            type: string
                            example: 'This is your MetaMask address if you import the private key. Smart wallet operations use the address above.'
                  near:
                    type: object
                    properties:
                      accountId:
                        type: string
                        example: 'ssxkqow2xbmcjkoxct6sezew6op1snm3.testnet'
                  supportedChains:
                    type: array
                    items:
                      type: object
                      properties:
                        chainId:
                          type: integer
                          example: 421614
                        name:
                          type: string
                          example: 'Arbitrum Sepolia'
                  usage:
                    type: object
                    properties:
                      deposits:
                        type: string
                        example: 'Send EVM funds to evm.smartWallet.address for best experience'
                      transactions:
                        type: string
                        example: 'All smart wallet operations use evm.smartWallet.address across all supported chains'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Wallet not found'
        '500':
          description: Failed to fetch addresses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Failed to fetch addresses'

  /api/wallet/near/bridge-info:
    get:
      tags:
        - Wallet
      summary: Get NEAR bridge token information
      description: |
        Returns information about bridging tokens from Ethereum to NEAR and common bridged token account IDs.
        Helpful for understanding how bridged tokens work and troubleshooting missing tokens.
      security: [] # No auth required
      responses:
        '200':
          description: Bridge information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'NEAR bridge token information'
                  note:
                    type: string
                    example: 'Bridged tokens from Ethereum to NEAR use the Rainbow Bridge'
                  bridgeUrl:
                    type: string
                    example: 'https://rainbowbridge.app/'
                  commonBridgedTokens:
                    type: object
                    properties:
                      USDC:
                        type: string
                        example: 'a0b86a33e6417c19a435e21fe8ec9b8e57c81e52.factory.bridge.near'
                      USDT:
                        type: string
                        example: 'dac17f958d2ee523a2206206994597c13d831ec7.factory.bridge.near'
                      WETH:
                        type: string
                        example: 'c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2.factory.bridge.near'
                      DAI:
                        type: string
                        example: '6b175474e89094c44da98b954eedeac495271d0f.factory.bridge.near'
                  instructions:
                    type: array
                    items:
                      type: string
                    example:
                      - '1. Go to https://rainbowbridge.app/'
                      - '2. Connect your wallet'
                      - '3. Select token and amount to bridge'
                      - '4. Tokens will appear with pattern: [eth-contract-address].factory.bridge.near'
                  troubleshooting:
                    type: object
                    properties:
                      issue:
                        type: string
                      solution:
                        type: string
                        example: 'Use the /check-token endpoint below to manually verify specific token contracts'
                      commonIssues:
                        type: array
                        items:
                          type: string
                        example:
                          - 'Token bridged to mainnet instead of testnet'
                          - 'Token has a different account ID pattern'
                          - 'Bridge transaction failed or is still pending'

  /api/wallet/near/check-token:
    post:
      tags:
        - Wallet
      summary: Check specific NEAR token balance
      description: |
        Manually check the balance of a specific NEP-141 token on NEAR by its account ID.
        Useful for debugging bridged tokens or checking tokens not in the default list.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tokenAccountId
              properties:
                tokenAccountId:
                  type: string
                  description: The NEAR account ID of the token contract
                  example: 'a0b86a33e6417c19a435e21fe8ec9b8e57c81e52.factory.bridge.near'
      responses:
        '200':
          description: Token check completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  found:
                    type: boolean
                    example: true
                  tokenBalance:
                    type: object
                    properties:
                      token:
                        type: object
                        properties:
                          accountId:
                            type: string
                            example: 'a0b86a33e6417c19a435e21fe8ec9b8e57c81e52.factory.bridge.near'
                          symbol:
                            type: string
                            example: 'USDC'
                          name:
                            type: string
                            example: 'USD Coin'
                          decimals:
                            type: integer
                            example: 6
                      balance:
                        type: object
                        properties:
                          raw:
                            type: string
                            example: '5000000'
                          formatted:
                            type: string
                            example: '5.0'
                  message:
                    type: string
                    example: 'Found 5.0 USDC'
                  suggestions:
                    type: array
                    items:
                      type: string
                    description: Only present when found=false
                    example:
                      - 'Check if the token account ID is correct'
                      - 'Verify the token exists on NEAR testnet'
        '400':
          description: Missing tokenAccountId parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'tokenAccountId is required'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Wallet or NEAR account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                no_wallet:
                  value:
                    error: 'Wallet not found'
                no_near:
                  value:
                    error: 'No NEAR account found'
        '500':
          description: Failed to check token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Failed to check token'

  /api/wallet/testnet-tokens:
    get:
      tags:
        - Wallet
      summary: Get testnet token information and faucet links
      description: |
        Returns information about supported testnet tokens and links to faucets where you can get them.
        Helpful for testing the multi-token wallet functionality.
      security: [] # No auth required
      responses:
        '200':
          description: Testnet token information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Testnet token information and faucet links'
                  faucets:
                    type: object
                    properties:
                      nativeTokens:
                        type: object
                        description: Faucet links for native tokens (ETH)
                        properties:
                          'Ethereum Sepolia':
                            type: string
                            example: 'https://sepoliafaucet.com/'
                          'Arbitrum Sepolia':
                            type: string
                            example: 'https://faucet.quicknode.com/arbitrum/sepolia'
                          'Optimism Sepolia':
                            type: string
                            example: 'https://faucet.quicknode.com/optimism/sepolia'
                      erc20Tokens:
                        type: object
                        properties:
                          note:
                            type: string
                            example: 'Most ERC-20 tokens on testnets require minting from their contracts or specific faucets'
                          instructions:
                            type: string
                            example: 'Visit the token contract on etherscan and look for mint/faucet functions, or check project documentation for testnet token faucets'
                  tokenAddresses:
                    type: object
                    description: Contract addresses for supported testnet tokens
                    properties:
                      '11155111':
                        type: array
                        description: Ethereum Sepolia tokens
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                              example: '0x7b79995e5f793A07Bc00c21412e50Ecae098E7f9'
                            symbol:
                              type: string
                              example: 'WETH'
                      '421614':
                        type: array
                        description: Arbitrum Sepolia tokens
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                              example: '0x980B62Da83eFf3D4576C647993b0c1D7faf17c73'
                            symbol:
                              type: string
                              example: 'WETH'
                  instructions:
                    type: object
                    properties:
                      step1:
                        type: string
                        example: 'Get native tokens (ETH) from the faucets listed above'
                      step2:
                        type: string
                        example: 'For ERC-20 tokens, you may need to mint them from the contract or find specific token faucets'
                      step3:
                        type: string
                        example: 'Check token contract pages on Etherscan for mint/faucet functions'
                      step4:
                        type: string
                        example: 'Some tokens may not be available on all testnets - this is normal'

  /api/wallet/balances:
    get:
      tags:
        - Wallet
      summary: Get comprehensive multi-token wallet balances across all chains
      description: |
        Returns comprehensive token balances across all supported EVM chains and NEAR protocol.
        Includes native tokens (ETH, NEAR) and all supported tokens (ERC-20s, NEP-141s).
        Provides both chain-abstracted totals and per-chain breakdowns.
        No parameters required - automatically discovers and fetches all tokens.
      responses:
        '200':
          description: Comprehensive wallet balances retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  evm:
                    type: object
                    properties:
                      address:
                        type: string
                        example: '0x321fBF99d74b02f405CbD7D5b59F6D01A047814e'
                        description: Smart wallet address (same across all EVM chains)
                      totalBalances:
                        type: array
                        description: Aggregated token balances across all EVM chains
                        items:
                          type: object
                          properties:
                            token:
                              type: object
                              properties:
                                address:
                                  type: string
                                  example: 'native'
                                  description: Token contract address or 'native' for ETH
                                symbol:
                                  type: string
                                  example: 'ETH'
                                name:
                                  type: string
                                  example: 'Ethereum'
                                decimals:
                                  type: integer
                                  example: 18
                                chainId:
                                  type: integer
                                  example: 11155111
                                  description: Primary chain where token was first discovered
                            balance:
                              type: object
                              properties:
                                raw:
                                  type: string
                                  example: '3000000000000000000'
                                  description: Total balance across all chains in smallest unit
                                formatted:
                                  type: string
                                  example: '3.0'
                                  description: Human-readable total balance
                            chainBreakdown:
                              type: array
                              description: Per-chain breakdown of this token
                              items:
                                type: object
                                properties:
                                  chainId:
                                    type: integer
                                    example: 421614
                                  chainName:
                                    type: string
                                    example: 'Arbitrum Sepolia'
                                  balance:
                                    type: object
                                    properties:
                                      raw:
                                        type: string
                                        example: '1000000000000000000'
                                      formatted:
                                        type: string
                                        example: '1.0'
                      chainBreakdown:
                        type: array
                        description: Comprehensive per-chain token breakdown
                        items:
                          type: object
                          properties:
                            chainId:
                              type: integer
                              example: 421614
                            chainName:
                              type: string
                              example: 'Arbitrum Sepolia'
                            address:
                              type: string
                              example: '0x321fBF99d74b02f405CbD7D5b59F6D01A047814e'
                              description: Smart wallet address on this chain
                            tokens:
                              type: array
                              description: All tokens with balances on this chain
                              items:
                                type: object
                                properties:
                                  token:
                                    type: object
                                    properties:
                                      address:
                                        type: string
                                        example: '0xA0b86a33E6417c19A435e21fe8EC9b8e57c81E52'
                                      symbol:
                                        type: string
                                        example: 'USDC'
                                      name:
                                        type: string
                                        example: 'USD Coin'
                                      decimals:
                                        type: integer
                                        example: 6
                                      chainId:
                                        type: integer
                                        example: 11155111
                                  balance:
                                    type: object
                                    properties:
                                      raw:
                                        type: string
                                        example: '1000000'
                                      formatted:
                                        type: string
                                        example: '1.0'
                      supportedChains:
                        type: array
                        items:
                          type: object
                          properties:
                            chainId:
                              type: integer
                              example: 421614
                            name:
                              type: string
                              example: 'Arbitrum Sepolia'
                      note:
                        type: string
                        example: 'Token balances aggregated across all supported EVM chains'
                  near:
                    type: object
                    properties:
                      accountId:
                        type: string
                        example: 'ssxkqow2xbmcjkoxct6sezew6op1snm3.testnet'
                      tokens:
                        type: array
                        description: All NEAR tokens (native NEAR + NEP-141 tokens)
                        items:
                          type: object
                          properties:
                            token:
                              type: object
                              properties:
                                accountId:
                                  type: string
                                  example: 'usdc.fakes.testnet'
                                  description: Token contract account ID or 'native' for NEAR
                                symbol:
                                  type: string
                                  example: 'USDC'
                                name:
                                  type: string
                                  example: 'USD Coin'
                                decimals:
                                  type: integer
                                  example: 6
                            balance:
                              type: object
                              properties:
                                raw:
                                  type: string
                                  example: '5000000000000000000000000'
                                formatted:
                                  type: string
                                  example: '5.0000'
                  summary:
                    type: object
                    properties:
                      totalEvmChains:
                        type: integer
                        example: 3
                        description: Total number of supported EVM chains
                      evmChainsWithBalance:
                        type: integer
                        example: 2
                        description: Number of EVM chains with non-zero token balances
                      totalEvmTokens:
                        type: integer
                        example: 4
                        description: Total number of unique EVM tokens with balances
                      totalNearTokens:
                        type: integer
                        example: 3
                        description: Total number of NEAR tokens with balances
                      hasNearBalance:
                        type: boolean
                        example: true
                        description: Whether any NEAR tokens have non-zero balances
              example:
                evm:
                  address: '0x321fBF99d74b02f405CbD7D5b59F6D01A047814e'
                  totalBalances:
                    - token:
                        address: 'native'
                        symbol: 'ETH'
                        name: 'Ethereum'
                        decimals: 18
                        chainId: 11155111
                      balance:
                        raw: '300000000000000000'
                        formatted: '0.3'
                      chainBreakdown:
                        - chainId: 11155111
                          chainName: 'Ethereum Sepolia'
                          balance:
                            raw: '200000000000000000'
                            formatted: '0.2'
                        - chainId: 11155420
                          chainName: 'Optimism Sepolia'
                          balance:
                            raw: '100000000000000000'
                            formatted: '0.1'
                    - token:
                        address: '0xA0b86a33E6417c19A435e21fe8EC9b8e57c81E52'
                        symbol: 'USDC'
                        name: 'USD Coin'
                        decimals: 6
                        chainId: 11155111
                      balance:
                        raw: '2000000'
                        formatted: '2.0'
                      chainBreakdown:
                        - chainId: 11155111
                          chainName: 'Ethereum Sepolia'
                          balance:
                            raw: '2000000'
                            formatted: '2.0'
                  chainBreakdown:
                    - chainId: 11155111
                      chainName: 'Ethereum Sepolia'
                      address: '0x321fBF99d74b02f405CbD7D5b59F6D01A047814e'
                      tokens:
                        - token:
                            address: 'native'
                            symbol: 'ETH'
                            name: 'Ethereum'
                            decimals: 18
                            chainId: 11155111
                          balance:
                            raw: '200000000000000000'
                            formatted: '0.2'
                        - token:
                            address: '0xA0b86a33E6417c19A435e21fe8EC9b8e57c81E52'
                            symbol: 'USDC'
                            name: 'USD Coin'
                            decimals: 6
                            chainId: 11155111
                          balance:
                            raw: '2000000'
                            formatted: '2.0'
                  supportedChains:
                    - chainId: 11155111
                      name: 'Ethereum Sepolia'
                    - chainId: 421614
                      name: 'Arbitrum Sepolia'
                    - chainId: 11155420
                      name: 'Optimism Sepolia'
                  note: 'Token balances aggregated across all supported EVM chains'
                near:
                  accountId: 'ssxkqow2xbmcjkoxct6sezew6op1snm3.testnet'
                  tokens:
                    - token:
                        accountId: 'native'
                        symbol: 'NEAR'
                        name: 'NEAR Protocol'
                        decimals: 24
                      balance:
                        raw: '12000000000000000000000000'
                        formatted: '12.0000'
                    - token:
                        accountId: 'usdc.fakes.testnet'
                        symbol: 'USDC'
                        name: 'USD Coin'
                        decimals: 6
                      balance:
                        raw: '5000000'
                        formatted: '5.0'
                summary:
                  totalEvmChains: 3
                  evmChainsWithBalance: 2
                  totalEvmTokens: 2
                  totalNearTokens: 2
                  hasNearBalance: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Wallet not found'
        '500':
          description: Failed to fetch balances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Failed to fetch balances'

  /hash-random-number:
    post:
      tags:
        - Cross-Chain Swaps
      summary: Hash a random number using Keccak-256
      description: |
        Utility endpoint to hash a random number using Keccak-256.
        Used for testing cryptographic hash generation.
      security: [] # No auth required
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - number
              properties:
                number:
                  type: string
                  description: The random number to hash
                  example: '12345'
      responses:
        '200':
          description: Hash generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  hash:
                    type: string
                    description: Keccak-256 hash of the input number
                    example: '0xa82aec019867b7307551dc397acde18b541e742fa1a4e53df4ce3b02d462f524'

  /api/cross-chain-swap:
    post:
      tags:
        - Cross-Chain Swaps
      summary: Initiate a cross-chain swap
      description: |
        Initiates a cross-chain swap between supported EVM chains and NEAR protocol using 1inch Fusion+ atomic swaps.
        
        **Supported Chains:**
        - EVM: "ethereum" (Sepolia), "arbitrum" (Sepolia), "optimism" (Sepolia)
        - NEAR: "near" (Testnet), "near-mainnet" (Mainnet)
        
        **Features:**
        - User-friendly chain names (case-insensitive)
        - Automatic amount conversion (e.g., "10" â†’ "10000000" for USDC)
        - Auto-assigned USDC token contracts
        - NEAR USDC approval for NEAR-originated swaps
        - Real-time polling and status updates
        - Bi-directional EVM â†” NEAR support
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - fromChain
                - toChain
              properties:
                amount:
                  type: string
                  description: User-friendly amount (e.g., "10" for 10 USDC)
                  example: '10'
                fromChain:
                  type: string
                  description: Source chain name (case-insensitive)
                  enum: ['ethereum', 'arbitrum', 'optimism', 'near', 'near-testnet', 'near-mainnet']
                  example: 'ethereum'
                toChain:
                  type: string
                  description: Destination chain name (case-insensitive)
                  enum: ['ethereum', 'arbitrum', 'optimism', 'near', 'near-testnet', 'near-mainnet']
                  example: 'near'
                relayerUrl:
                  type: string
                  description: Optional custom relayer URL (defaults to production relayer)
                  example: 'https://1prime-relayer.up.railway.app/api/v1'
      responses:
        '200':
          description: Cross-chain swap initiated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      orderId:
                        type: string
                        description: Unique order identifier
                        example: 'order_1754225913981_dfjl1cmae'
                      status:
                        type: string
                        description: Current order status
                        example: 'completed'
                      message:
                        type: string
                        description: Status message
                        example: 'Cross-chain swap completed successfully'
                  error:
                    type: string
                    nullable: true
                    description: Error message if swap failed
                  timestamp:
                    type: integer
                    description: Unix timestamp
                    example: 1703123456789
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: 'Missing required swap parameters (amount, fromChain, toChain)'
                  timestamp:
                    type: integer
                    example: 1703123456789
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Wallet not found'
        '500':
          description: Swap execution failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: 'NEAR USDC approval failed: Failed to approve USDC spending on NEAR'
                  timestamp:
                    type: integer
                    example: 1703123456789

  /api/cross-chain-swap/{orderId}/status:
    get:
      tags:
        - Cross-Chain Swaps
      summary: Get cross-chain swap order status
      description: |
        Retrieves the current status of a cross-chain swap order.
        Returns both local database status and live relayer status when available.
      parameters:
        - name: orderId
          in: path
          required: true
          description: The unique order identifier
          schema:
            type: string
            example: 'order_1754225913981_dfjl1cmae'
      responses:
        '200':
          description: Order status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      orderId:
                        type: string
                        example: 'order_1754225913981_dfjl1cmae'
                      orderHash:
                        type: string
                        nullable: true
                        description: Relayer order hash (available after preparation)
                        example: '0xa82aec019867b7307551dc397acde18b541e742fa1a4e53df4ce3b02d462f524'
                      currentPhase:
                        type: string
                        description: Current order phase
                        enum: ['preparing', 'prepared', 'submitted', 'polling', 'waiting-for-secret', 'revealing-secret', 'completed', 'failed']
                        example: 'completed'
                      isCompleted:
                        type: boolean
                        example: true
                      isSuccessful:
                        type: boolean
                        nullable: true
                        example: true
                      errorMessage:
                        type: string
                        nullable: true
                        description: Error message if order failed
                      secretRevealed:
                        type: boolean
                        description: Whether the secret has been revealed
                        example: true
                      sourceChain:
                        type: string
                        example: '11155111'
                      destinationChain:
                        type: string
                        example: '398'
                      sourceToken:
                        type: string
                        example: '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238'
                      destinationToken:
                        type: string
                        nullable: true
                        example: '3e2210e1184b45b64c8a434c0a7e7b23cc04ea7eb7a6c3c32520d03d4afcb8af'
                      sourceAmount:
                        type: string
                        description: Amount in smallest unit
                        example: '10000000'
                      destinationAmount:
                        type: string
                        nullable: true
                        description: Received amount (if known)
                      statusHistory:
                        type: array
                        description: Historical status updates
                        items:
                          type: object
                          properties:
                            phase:
                              type: string
                              example: 'completed'
                            timestamp:
                              type: integer
                              example: 1703123456789
                            data:
                              type: object
                              nullable: true
                              description: Additional phase-specific data
                      createdAt:
                        type: string
                        format: date-time
                        example: '2024-01-01T12:00:00Z'
                      completedAt:
                        type: string
                        format: date-time
                        nullable: true
                        example: '2024-01-01T12:05:00Z'
                      liveRelayerStatus:
                        type: object
                        nullable: true
                        description: Live status from relayer (if available)
                        properties:
                          phase:
                            type: string
                            example: 'completed'
                          isCompleted:
                            type: boolean
                            example: true
                      dataSource:
                        type: string
                        description: Source of status data
                        enum: ['local', 'relayer']
                        example: 'relayer'
                  timestamp:
                    type: integer
                    description: Unix timestamp
                    example: 1703123456789
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Access denied - user does not own this order
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: 'Forbidden'
                  timestamp:
                    type: integer
                    example: 1703123456789
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: 'Order not found'
                  timestamp:
                    type: integer
                    example: 1703123456789
        '500':
          description: Failed to fetch order status
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: 'Failed to fetch order status'
                  timestamp:
                    type: integer
                    example: 1703123456789

  /api/cross-chain-swap/orders:
    get:
      tags:
        - Cross-Chain Swaps
      summary: Get all cross-chain swap orders for authenticated user
      description: |
        Retrieves all cross-chain swap orders created by the authenticated user.
        Returns orders sorted by creation date (newest first).
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        orderId:
                          type: string
                          example: 'order_1754225913981_dfjl1cmae'
                        orderHash:
                          type: string
                          nullable: true
                          description: Relayer order hash (if available)
                          example: '0xa82aec019867b7307551dc397acde18b541e742fa1a4e53df4ce3b02d462f524'
                        currentPhase:
                          type: string
                          description: Current order phase
                          example: 'completed'
                        isCompleted:
                          type: boolean
                          example: true
                        isSuccessful:
                          type: boolean
                          nullable: true
                          example: true
                        sourceChain:
                          type: string
                          description: Source chain ID
                          example: '11155111'
                        destinationChain:
                          type: string
                          description: Destination chain ID
                          example: '398'
                        sourceToken:
                          type: string
                          description: Source token contract address
                          example: '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238'
                        destinationToken:
                          type: string
                          nullable: true
                          description: Destination token contract address
                          example: '3e2210e1184b45b64c8a434c0a7e7b23cc04ea7eb7a6c3c32520d03d4afcb8af'
                        sourceAmount:
                          type: string
                          description: Source amount in smallest unit
                          example: '10000000'
                        destinationAmount:
                          type: string
                          nullable: true
                          description: Destination amount (if known)
                        createdAt:
                          type: string
                          format: date-time
                          example: '2024-01-01T12:00:00Z'
                        completedAt:
                          type: string
                          format: date-time
                          nullable: true
                          example: '2024-01-01T12:05:00Z'
                  timestamp:
                    type: integer
                    description: Unix timestamp
                    example: 1703123456789
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Failed to fetch orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: 'Failed to fetch orders'
                  timestamp:
                    type: integer
                    example: 1703123456789

  /api/**:
    get:
      tags:
        - Authentication
      summary: Better-Auth endpoints
      description: |
        Handles various authentication endpoints provided by better-auth library.
        These include session management, token refresh, etc.
      responses:
        '200':
          description: Varies by specific endpoint
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - Authentication
      summary: Better-Auth endpoints
      description: |
        Handles various authentication endpoints provided by better-auth library.
        These include session management, token refresh, etc.
      responses:
        '200':
          description: Varies by specific endpoint
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Bearer token obtained from /sign-up/email or /sign-in/email endpoints.
        Store this token in Downloads/ folder for Apple Shortcuts access.

  schemas:
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message
          example: 'Unauthorized'

    WalletInfo:
      type: object
      properties:
        evm:
          type: object
          properties:
            smartAccountAddress:
              type: string
              example: '0x1234567890abcdef...'
            chainId:
              type: integer
              example: 421614
            kernelVersion:
              type: string
              example: 'v3.1'
        near:
          type: object
          properties:
            accountId:
              type: string
              example: 'user123.testnet'

  responses:
    Unauthorized:
      description: Authentication required or invalid token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: 'Unauthorized'

    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: Authentication
    description: User authentication and account management
  - name: Wallet
    description: Multi-chain, multi-token wallet operations (native + ERC-20 + NEP-141)
  - name: Cross-Chain Swaps
    description: 1inch Fusion+ powered atomic swaps between EVM chains and NEAR protocol
  - name: EVM Transactions
    description: Ethereum Virtual Machine transaction operations
  - name: NEAR Transactions
    description: NEAR Protocol transaction operations
  - name: Test Endpoints
    description: Development and testing endpoints

# Future endpoints for UX flow completion
x-future-endpoints:
  deposit:
    - GET /api/deposit/address/{chain} - Get deposit address for specific chain
    - POST /api/deposit/verify - Verify deposit transaction

  swap-enhancements:
    - GET /api/swap/tokens/{chain} - Get supported tokens for chain (beyond USDC)
    - POST /api/swap/quote - Get swap quote with multiple token pairs
    - POST /api/swap/cancel - Cancel pending swap order

  wallet:
    - POST /api/wallet/transfer - Transfer funds between chains or to/from EOA
    - GET /api/wallet/transactions - Get transaction history
    - POST /api/wallet/tokens/add - Add custom token to tracking list
    - DELETE /api/wallet/tokens/{address} - Remove token from tracking
    - GET /api/wallet/tokens/discover - Auto-discover tokens with balances

x-implemented-features:
  cross-chain-swaps:
    - POST /api/cross-chain-swap - âœ… Implemented
    - GET /api/cross-chain-swap/{orderId}/status - âœ… Implemented  
    - GET /api/cross-chain-swap/orders - âœ… Implemented
    - POST /hash-random-number - âœ… Implemented (utility)

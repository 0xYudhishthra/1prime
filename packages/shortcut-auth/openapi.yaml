openapi: 3.1.3
info:
  title: Cross-Chain Swap API
  description: |
    A proof-of-concept API for cross-chain swaps between EVM chains and NEAR protocol.
    Designed for Apple Shortcuts integration with Siri voice control.

    ## Authentication Flow
    1. Sign up with email/password to get auth token
    2. Store token in Downloads/ folder for Shortcuts access
    3. EVM and NEAR wallets are automatically generated and linked

    ## Multi-Chain Support
    - EVM chains: Ethereum Sepolia, Arbitrum Sepolia, Optimism Sepolia
    - Smart wallets deployed on all supported chains with same address
    - Chain-abstracted balance views for unified wallet management

    ## Security Note
    This is a proof-of-concept with simplified security for validation purposes.
  version: 1.0.0
  contact:
    name: Cross-Chain Swap Team
  license:
    name: MIT

servers:
  - url: https://your-api-domain.com
    description: Production server
  - url: http://localhost:8787
    description: Development server

security:
  - BearerAuth: []

paths:
  /sign-up/email:
    post:
      tags:
        - Authentication
      summary: Create new user account with email/password
      description: |
        Creates a new user account and automatically generates both EVM and NEAR wallets.
        EVM smart wallets are deployed on all supported chains with the same address.
        Returns authentication token that should be stored in Downloads/ folder.
      security: [] # No auth required for signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: 'user@example.com'
                password:
                  type: string
                  minLength: 6
                  maxLength: 10
                  example: 'password123'
      responses:
        '200':
          description: Account created successfully
          content:
            application/json:
              schema:
                type: string
                description: Bearer token for authentication
                example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
        '500':
          description: Failed to create account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                evm_error:
                  value:
                    error: 'Failed to create multi-chain evm account'
                near_error:
                  value:
                    error: 'Failed to create near account'
                rpc_missing:
                  value:
                    error: 'Missing required ZeroDev RPC URLs for chains: 11155111, 421614'

  /sign-in/email:
    post:
      tags:
        - Authentication
      summary: Sign in with email/password
      description: |
        Authenticates existing user with email and password.
        Returns authentication token for accessing protected endpoints.
      security: [] # No auth required for signin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: 'user@example.com'
                password:
                  type: string
                  example: 'password123'
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: string
                description: Bearer token for authentication
                example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Authentication failed'

  /api/send-transaction:
    post:
      tags:
        - EVM Transactions
      summary: Send EVM transaction
      description: Sends a test EVM transaction using the user's smart wallet on Arbitrum Sepolia
      responses:
        '200':
          description: Transaction sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  txnHash:
                    type: string
                    description: Transaction hash
                    example: '0x1234567890abcdef...'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Wallet not found'
        '500':
          description: Failed to send transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Failed to send transaction'

  /api/send-near-transaction:
    post:
      tags:
        - NEAR Transactions
      summary: Send NEAR transaction
      description: Sends a test NEAR transaction (0.1 NEAR to self)
      responses:
        '200':
          description: Transaction sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    description: NEAR transaction result
                    properties:
                      final_execution_status:
                        type: string
                      transaction:
                        type: object
                      receipts_outcome:
                        type: array
                        items:
                          type: object
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Wallet not found'
        '500':
          description: Server error or no NEAR account found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                no_account:
                  value:
                    error: 'No near account found'
                transaction_failed:
                  value:
                    error: 'Failed to send NEAR transaction'

  /api/random-number:
    get:
      tags:
        - Test Endpoints
      summary: Get random number (test endpoint)
      description: Returns a random number to test authentication
      responses:
        '200':
          description: Random number generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  number:
                    type: integer
                    minimum: 0
                    maximum: 99
                    example: 42
        '401':
          $ref: '#/components/responses/Unauthorized'

  /create-near-account:
    get:
      tags:
        - Test Endpoints
      summary: Create test NEAR account
      description: Test endpoint to create a NEAR account (development only)
      security: []
      responses:
        '200':
          description: NEAR account created
          content:
            application/json:
              schema:
                type: object
                properties:
                  nearAccount:
                    type: object
                    properties:
                      accountId:
                        type: string
                        example: '4ervtktfnuw7kwxaervheolyggrdncxo.testnet'
                      keyPair:
                        type: object
                      transaction:
                        type: object
        '500':
          $ref: '#/components/responses/ServerError'

  /api/wallet/supported-chains:
    get:
      tags:
        - Wallet
      summary: Get supported EVM testnet chains
      description: Returns list of supported EVM testnet chains for cross-chain operations
      security: [] # No auth required
      responses:
        '200':
          description: Supported chains retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  chains:
                    type: array
                    items:
                      type: object
                      properties:
                        chainId:
                          type: integer
                          example: 421614
                        name:
                          type: string
                          example: 'Arbitrum Sepolia'
              example:
                chains:
                  - chainId: 11155111
                    name: 'Ethereum Sepolia'
                  - chainId: 421614
                    name: 'Arbitrum Sepolia'
                  - chainId: 11155420
                    name: 'Optimism Sepolia'

  /api/wallet/addresses:
    get:
      tags:
        - Wallet
      summary: Get wallet addresses for all supported chains
      description: |
        Returns both EVM (smart wallet and EOA) and NEAR wallet addresses.
        The smart wallet address is the same across all supported EVM testnet chains.
      responses:
        '200':
          description: Wallet addresses retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  evm:
                    type: object
                    properties:
                      smartWallet:
                        type: object
                        properties:
                          address:
                            type: string
                            example: '0x321fBF99d74b02f405CbD7D5b59F6D01A047814e'
                          note:
                            type: string
                            example: 'Send funds here for smart wallet operations. Same address works on all supported EVM chains.'
                      eoa:
                        type: object
                        properties:
                          address:
                            type: string
                            example: '0xE86eef3Dfc60939155Cb2139fb32f41e6996ba72'
                          note:
                            type: string
                            example: 'This is your MetaMask address if you import the private key. Smart wallet operations use the address above.'
                  near:
                    type: object
                    properties:
                      accountId:
                        type: string
                        example: 'ssxkqow2xbmcjkoxct6sezew6op1snm3.testnet'
                  supportedChains:
                    type: array
                    items:
                      type: object
                      properties:
                        chainId:
                          type: integer
                          example: 421614
                        name:
                          type: string
                          example: 'Arbitrum Sepolia'
                  usage:
                    type: object
                    properties:
                      deposits:
                        type: string
                        example: 'Send EVM funds to evm.smartWallet.address for best experience'
                      transactions:
                        type: string
                        example: 'All smart wallet operations use evm.smartWallet.address across all supported chains'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Wallet not found'
        '500':
          description: Failed to fetch addresses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Failed to fetch addresses'

  /api/wallet/balances:
    get:
      tags:
        - Wallet
      summary: Get chain-abstracted wallet balances across all chains
      description: |
        Returns unified balances across all supported EVM chains using ZeroDev's multi-chain capabilities,
        plus individual chain breakdown and NEAR balance. No parameters required - automatically fetches from all chains.
      responses:
        '200':
          description: Wallet balances retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  evm:
                    type: object
                    properties:
                      address:
                        type: string
                        example: '0x321fBF99d74b02f405CbD7D5b59F6D01A047814e'
                      totalBalances:
                        type: array
                        description: Chain-abstracted token balances
                        items:
                          type: object
                          properties:
                            token:
                              type: string
                              example: 'ETH'
                            symbol:
                              type: string
                              example: 'ETH'
                            totalBalance:
                              type: object
                              properties:
                                raw:
                                  type: string
                                  example: '3000000000000000000'
                                formatted:
                                  type: string
                                  example: '3.0'
                            chainBreakdown:
                              type: array
                              items:
                                type: object
                                properties:
                                  chainId:
                                    type: integer
                                    example: 421614
                                  chainName:
                                    type: string
                                    example: 'Arbitrum Sepolia'
                                  balance:
                                    type: object
                                    properties:
                                      raw:
                                        type: string
                                        example: '1000000000000000000'
                                      formatted:
                                        type: string
                                        example: '1.0'
                      chainBreakdown:
                        type: array
                        description: Individual chain balances
                        items:
                          type: object
                          properties:
                            chainId:
                              type: integer
                              example: 421614
                            chainName:
                              type: string
                              example: 'Arbitrum Sepolia'
                            address:
                              type: string
                              example: '0x321fBF99d74b02f405CbD7D5b59F6D01A047814e'
                            balance:
                              type: object
                              properties:
                                raw:
                                  type: string
                                  example: '1000000000000000000'
                                formatted:
                                  type: string
                                  example: '1.0'
                                symbol:
                                  type: string
                                  example: 'ETH'
                      supportedChains:
                        type: array
                        items:
                          type: object
                          properties:
                            chainId:
                              type: integer
                              example: 421614
                            name:
                              type: string
                              example: 'Arbitrum Sepolia'
                      note:
                        type: string
                        example: 'Chain-abstracted balances show your unified balance across all supported EVM chains'
                  near:
                    type: object
                    properties:
                      accountId:
                        type: string
                        example: 'ssxkqow2xbmcjkoxct6sezew6op1snm3.testnet'
                      balance:
                        type: object
                        properties:
                          raw:
                            type: string
                            example: '5000000000000000000000000'
                          formatted:
                            type: string
                            example: '5.0000'
                          symbol:
                            type: string
                            example: 'NEAR'
                  summary:
                    type: object
                    properties:
                      totalEvmChains:
                        type: integer
                        example: 3
                        description: Total number of supported EVM chains
                      evmChainsWithBalance:
                        type: integer
                        example: 2
                        description: Number of EVM chains with non-zero balance
                      hasNearBalance:
                        type: boolean
                        example: true
                        description: Whether NEAR account has non-zero balance
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Wallet not found'
        '500':
          description: Failed to fetch balances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Failed to fetch balances'

  /api/**:
    get:
      tags:
        - Authentication
      summary: Better-Auth endpoints
      description: |
        Handles various authentication endpoints provided by better-auth library.
        These include session management, token refresh, etc.
      responses:
        '200':
          description: Varies by specific endpoint
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - Authentication
      summary: Better-Auth endpoints
      description: |
        Handles various authentication endpoints provided by better-auth library.
        These include session management, token refresh, etc.
      responses:
        '200':
          description: Varies by specific endpoint
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Bearer token obtained from /sign-up/email or /sign-in/email endpoints.
        Store this token in Downloads/ folder for Apple Shortcuts access.

  schemas:
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message
          example: 'Unauthorized'

    WalletInfo:
      type: object
      properties:
        evm:
          type: object
          properties:
            smartAccountAddress:
              type: string
              example: '0x1234567890abcdef...'
            chainId:
              type: integer
              example: 421614
            kernelVersion:
              type: string
              example: 'v3.1'
        near:
          type: object
          properties:
            accountId:
              type: string
              example: 'user123.testnet'

  responses:
    Unauthorized:
      description: Authentication required or invalid token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: 'Unauthorized'

    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: Authentication
    description: User authentication and account management
  - name: Wallet
    description: Multi-chain wallet address and balance operations
  - name: EVM Transactions
    description: Ethereum Virtual Machine transaction operations
  - name: NEAR Transactions
    description: NEAR Protocol transaction operations
  - name: Test Endpoints
    description: Development and testing endpoints

# Future endpoints for UX flow completion
x-future-endpoints:
  deposit:
    - GET /api/deposit/address/{chain} - Get deposit address for specific chain
    - POST /api/deposit/verify - Verify deposit transaction

  swap:
    - GET /api/swap/tokens/{chain} - Get supported tokens for chain
    - POST /api/swap/quote - Get swap quote using 1inch Fusion+
    - POST /api/swap/execute - Execute swap order
    - GET /api/swap/status/{orderId} - Check swap status

  wallet:
    - POST /api/wallet/transfer - Transfer funds between chains or to/from EOA
    - GET /api/wallet/transactions - Get transaction history
